with "config";
@WITH_XML_ADA@

project Util is
   Version := "@UTIL_VERSION@";
   Library_Dir := "@UTIL_LIBDIR@";

   type Xml_Version_Type is ("none", "3", "4");

   Xml_Version : Xml_Version_Type := "@UTIL_XML_VERSION@";
   Xml_Src_Dir := "@UTIL_XML_DIR@";
   Asm_Src_Dir := "@UTIL_ASM_DIR@";
   Os_Src_Dir  := "@UTIL_OS_DIR@";
   Has_Vector_Mappers : Config.Yes_No := "@UTIL_HAVE_VECTOR_MAPPERS@";

   Library_Type : Config.Library_Type_Type := external ("LIBRARY_TYPE", "static");

   Has_Gnat_Traceback : Config.Yes_No := "@UTIL_GNAT_TRACEBACK@";
   
   package Naming is
      case Xml_Version is
         when "4" =>
            for Implementation ("Util.Serialize.IO.XML.Get_Location")
               use "util-serialize-io-xml-get_location-xmlada-4.adb";

         when "3" =>
            for Implementation ("Util.Serialize.IO.XML.Get_Location")
               use "util-serialize-io-xml-get_location-xmlada-3.adb";

	 when "none" =>

      end case;
      case Has_Gnat_Traceback is
         when "yes" =>
	    for Implementation ("Util.Log.Loggers.Traceback")
               use "util-log-loggers-traceback-gnat.adb";

         when "no" =>
	    for Implementation ("Util.Log.Loggers.Traceback")
               use "util-log-loggers-traceback-none.adb";

      end case;

      --  The GNAT traceback is not available for shared libraries.
      case Library_Type is
         when "relocatable" =>
	    for Implementation ("Util.Log.Loggers.Traceback")
               use "util-log-loggers-traceback-none.adb";
	 
	 when others =>
	      null;

      end case;
   end Naming;

   for Source_Dirs use ("src", "src/http", Asm_Src_Dir, Xml_Src_Dir, Os_Src_Dir);

   --  GCC 4.7 fails to build the Vector_Mapper generic package.
   case Has_Vector_Mappers is
      when "no" =>
	   for Excluded_Source_Files use ("util-serialize-mappers-vector_mapper.ads",
					 "util-serialize-mappers-vector_mapper.adb",
					 "util-http-rest.ads",
					 "util-http-rest.adb");

      when "yes" =>
	   null;
   end case;

   for Library_Name use "adautil";
   for Library_Kind use Library_Type;
   for Library_Version use "lib" & Project'Library_Name & ".so." & Version;

   for Library_Dir use "lib/util/" & Project'Library_Kind;
   for Object_Dir use "obj/util/" & Project'Library_Kind;

   package Builder  renames Config.Builder;
   package Compiler renames Config.Compiler;
   package Binder   renames Config.Binder;
   package Ide      renames Config.Ide;

end Util;
