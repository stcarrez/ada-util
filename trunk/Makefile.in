# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=distrib
GNATMAKE=gnatmake
GNATCLEAN=gnatclean
GPRPATH=util.gpr
SVN=svn
TESTUTIL_GPRPATH=testutil.gpr

distdir=ada-util-@UTIL_VERSION@

DIST_FILE=ada-util-@UTIL_VERSION@.tar.gz

XML_SRC_DIR=@UTIL_XML_DIR@
ASM_SRC_DIR=@UTIL_ASM_DIR@
AUNIT_SRC_DIR=@UTIL_AUNIT_DIR@
AHVEN_SRC_DIR=@UTIL_AHVEN_DIR@
AHVEN_SRC_OS_DIR=@UTIL_AHVEN_OS_DIR@

HAVE_XML=@UTIL_HAVE_XML@

MKDIR=mkdir
CP=cp

srcdir = .
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

includedir=${prefix}/share/ada/adainclude
projectdir=${prefix}/share/ada/adainclude
bindir=${prefix}/bin
libdir=${prefix}/lib
alidir=${prefix}/share/ada/adainclude

# Build executables for all mains defined by the project.
build:
	$(GNATMAKE) -XMODE=${MODE} -XPROCESSORS=4 -p -P "$(GPRPATH)"
	$(GNATMAKE) -XMODE=${MODE} -XPROCESSORS=4 -p -P "$(TESTUTIL_GPRPATH)"

# Build and run the unit tests
test:	build regtests/util-testsuite.adb
	$(GNATMAKE) -p -Ptests
	bin/util_harness -xml util-aunit.xml

regtests/util-testsuite.adb: regtests/util-testsuite.gpb Makefile
	gnatprep -DHAVE_XML=$(HAVE_XML) regtests/util-testsuite.gpb $@

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:	clean_test
	$(GNATCLEAN) -q -P "$(GPRPATH)"
	$(GNATCLEAN) -q -Ptestutil
	$(GNATCLEAN) -q -Ptests
	$(GNATCLEAN) -q -Psamples

# Clean the files produced by the unit tests
clean_test:
	rm -f test?.log test.log test-stream.txt test-write.txt util-tests.xml
	rm -rf regtests/result

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Update src/util.ads with the latest SVN revision number.
version:
	gnatprep `svn info | grep '^[UR][eR][Lv]' | sed -e 's,URL: \(.*\),-DURL="\1",' -e 's,Revision: ,-DREVISION=,'` \
		  src/util.gpb src/util.ads

# Files to package in source distribution
DISTFILES=README LICENSE.txt LICENSE.Ahven NOTICE.txt NEWS CHANGES ChangeLog \
config.guess configure config.sub \
configure.in Makefile.in install-sh \
util.gpr.in config.gpr.in testutil.gpr.in tests.gpr samples.gpr config.gpr \
src samples regtests testutil \
distrib support

dist:
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	mkdir $(distdir)/bin
	mkdir $(distdir)/obj
	mkdir $(distdir)/lib
	tar --exclude=.svn --exclude="*~" --exclude="*.o" --exclude="*.ali" \
	    --exclude="*.log" --exclude="*.a" \
	    -cvzf $(DIST_FILE) $(distdir)


install:
	$(MKDIR) -p ${includedir}/util
	$(MKDIR) -p ${includedir}/testutil
	$(MKDIR) -p ${projectdir}/
	${MKDIR} -p ${alidir}/testutil
	${MKDIR} -p ${alidir}/util
	${MKDIR} -p ${libdir}
	${CP} -p testutil/*.ad[bs] ${includedir}/testutil
	${CP} -p src/*.ad[bs] ${includedir}/util
	if test T${XML_SRC_DIR} != T ; then \
	   ${CP} -p ${XML_SRC_DIR}/*.ad[bs] ${includedir}/util ; \
	fi
	if test T${ASM_SRC_DIR} != T ; then \
	   ${CP} -p ${ASM_SRC_DIR}/*.ad[bs] ${includedir}/util ; \
	fi
	if test T${AUNIT_SRC_DIR} != T ; then \
	   ${CP} -p ${AUNIT_SRC_DIR}/*.ad[bs] ${includedir}/testutil ; \
	fi
	if test T${AHVEN_SRC_DIR} != T ; then \
	   ${CP} -p ${AHVEN_SRC_DIR}/*.ad[bs] ${includedir}/testutil ; \
	   ${CP} -p ${AHVEN_SRC_OS_DIR}/*.ad[bs] ${includedir}/testutil ; \
	fi
	sed -e "s,INSTALL,${prefix},g" < distrib/util.gpr > ${projectdir}/util.gpr
	sed -e "s,INSTALL,${prefix},g" < distrib/testutil.gpr > ${projectdir}/testutil.gpr
	${CP} -p lib/testutil/*.ali ${alidir}/testutil
	${CP} -p lib/util/*.ali ${alidir}/util
	${CP} -p lib/util/libadautil.a ${libdir}/
	${CP} -p lib/testutil/libadatestutil.a ${libdir}/

install-support:
	$(MKDIR) -p ${bindir}
	${CP} support/*.sh ${bindir}
	${CP} support/*.xsl ${bindir}

uninstall:
	rm -rf ${includedir}/testutil
	rm -rf ${includedir}/util
	rm -f ${libdir}/libadautil.a
	rm -f ${libdir}/libadatestutil.a
	rm -f ${projectdir}/testutil.gpr
	rm -f ${projectdir}/util.gpr

# prepare before releasing a new version of the package
# (collect information about changes and SVN repository)
prepare-release:
	${SVN} update
	${SVN} info > CHANGES
	${SVN} log -v > ChangeLog
