with "config";
with "util";

project Util_Http_Curl is
   Version     := Util.Version;
   Library_Dir := Util.Library_Dir;

   Has_Curl : Config.Yes_No := "yes";
   
   Library_Type : Config.Library_Type_Type := external ("LIBRARY_TYPE", "static");

   case Has_Curl is
      when "yes" =>
         for Source_Dirs use ("src/http/curl");
         for Library_Name use "ada_util_curl";
         for Library_Kind use Library_Type;
         for Library_Version use "lib" & Project'Library_Name & ".so." & Version;
         for Library_Options use (@UTIL_CURL_LIBRARY_OPTIONS@);

         for Library_Dir use "lib/util-curl/" & Project'Library_Kind;
         for Object_Dir use "obj/util-curl/" & Project'Library_Kind;

         case Library_Type is
            when "relocatable" =>
                for Library_Interface use ("Util.Http.Clients.Curl");

            when others =>
                null;

         end case;
        
      when "no" =>
         for Source_Dirs use ();

   end case;
   
   package Linker is
      case Has_Curl is
         when "yes" =>
            for Linker_Options use ("-lcurl");

         when "no" =>
            null;

      end case;
   end Linker;

   package Builder  renames Config.Builder;
   package Compiler renames Config.Compiler;
   package Binder   renames Config.Binder;
   package Ide      renames Config.Ide;

end Util_Http_Curl;
