with "config";

abstract project UtilAda_Conf is
   type Yes_No is ("yes", "no");

   Version := "@UTIL_VERSION@";
   Library_Dir := "lib";

   type Xml_Version_Type is ("none", "3", "4");

   type Os_Version_Type is ("none", "unix", "windows",
                            "linux32", "linux64", "win32", "win64", "macos64",
                            "netbsd32", "netbsd64", "freebsd32", "freebsd64");

   type Asm_Version_Type is ("none", "intrinsic", "x86");

   Asm_Version : Asm_Version_Type := external ("UTIL_ASM_TYPE", "@UTIL_ASM_TYPE@");

   Library_Type : Config.Library_Type_Type := external ("UTIL_LIBRARY_TYPE", "@DEFAULT_LIBRARY_TYPE@");

   Os_Version  : Os_Version_Type := external ("UTIL_OS", "@UTIL_OS_VERSION@");
   Xml_Version : Xml_Version_Type := "@VERSION_XML_ADA@";
   Has_Curl    : Config.Yes_No := "@UTIL_HAVE_CURL@";
   Has_AWS     : Config.Yes_No := "@UTIL_HAVE_AWS@";
   Has_Xml     : Config.Yes_No := "@HAVE_XML_ADA@";
   Has_Lzma    : Config.Yes_No := "@UTIL_HAVE_LZMA@";

   --  Enable the use of GNAT symbolic traceback.
   Has_Gnat_Traceback : Config.Yes_No := "@UTIL_GNAT_TRACEBACK@";

   type AWS_Impl_Type is ("none", "1", "2", "3");

   AWS_Impl    : AWS_Impl_Type := external ("UTIL_AWS_IMPL", "@UTIL_AWS_VERSION@");

   type Unit_Type is ("none", "ahven-unix", "ahven-windows", "aunit");

   Unit : Unit_Type := "@UTIL_XUNIT_TYPE@";

   Library_Options := "@UTIL_LIBRARY_OPTIONS@";

   Curl_Library_Options := "@UTIL_CURL_LIBRARY_OPTIONS@";

   package Builder  renames Config.Builder;
   package Compiler renames Config.Compiler;
   package Ide      renames Config.Ide;
   package Binder   renames Config.Binder;

end UtilAda_Conf;
