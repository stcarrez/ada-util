ifndef MAKEFILE_DEFAULTS
MAKEFILE_DEFAULTS=1

# Define how to build the project: distrib, debug, optimize, coverage, profile
BUILD?=distrib

# Enable the build of shared libraries: yes, no
BUILDS_SHARED?=no

# The installation prefix for the project
PREFIX?=/usr/local

# You may edit this makefile as long as you keep these original 
# target names defined.
GNATMAKE?=gprbuild
GNATCLEAN?=gnatclean
GPRINSTALL?=gprinstall
INSTALL?=install
PANDOC?=$(shell which pandoc)
DYNAMO?=$(shell which dynamo)
PROCESSORS?=1
MKDIR?=mkdir
CP?=cp
LN?=ln -s
ALR?=alr --non-interactive
BUILD_COMMAND?=$(ALR) build --

ifeq (${OS},Windows_NT)
LIBEXT?=dll
LIBVER?=dll
else
LIBEXT?=so
LIBVER?=so.$(SO_VERSION)
endif

srcdir ?= .
top_builddir ?= .
prefix ?= $(PREFIX)
exec_prefix ?= ${prefix}
top_builddir ?= .

includedir?=${prefix}/${infix_inc}
projectdir?=${prefix}/${infix_prj}
bindir?=${prefix}/bin
libdir?=${prefix}/${infix_lib}
alidir?=${prefix}/${infix_ali}
samplesdir?=${prefix}/share/doc/${docdir}
dynamodir=${prefix}/share/dynamo
aliredir=${prefix}/alire-index

MAKE_ARGS +=

build:: all

ifeq ($(BUILDS_SHARED),yes)
all::     static shared build-test
install:: uninstall install-shared install-static
else
all::     static build-test
install:: uninstall install-static
endif

static::
shared::
install-data::

# Clean, then build executables for all mains defined by the project.
rebuild: clean all

# Clean the root project of all build products.
clean::
	-rm -rf lib obj bin $(CLEAN_FILES)
	-rm -rf regtests/result

dist-clean:: clean
	-rm -f *.log *~ Makefile.conf

doc::
ifneq (${DYNAMO},)
	$(DYNAMO) build-doc -markdown wiki
endif

dist::
	rm -f $(DIST_FILE)
	git archive -o $(DIST_FILE) --prefix=$(DIST_DIR)/ HEAD

define ada_library
static:: lib-setup
	cd $(2) && $(BUILD_COMMAND) $(STATIC_MAKE_ARGS)

  install-static::
	cd $(2) && $(ALR) exec -- $(GPRINSTALL) -p -f --prefix=$(DESTDIR)${prefix} \
          $(STATIC_MAKE_ARGS) \
          --build-name=static $(1).gpr  

  lib-setup:: obj/$(1)/static

  obj/$(1)/static:
	$(MKDIR) -p obj/$(1)/static

ifeq ($(BUILDS_SHARED),yes)
  shared:: lib-setup
	cd $(2) && $(BUILD_COMMAND) $(SHARED_MAKE_ARGS)

  install-shared::
	cd $(2) && $(ALR) exec -- $(GPRINSTALL) -p -f --prefix=$(DESTDIR)${prefix} \
          $(SHARED_MAKE_ARGS) \
          --build-name=relocatable $(1).gpr
endif

  uninstall::
	-cd $(2) && $(ALR) exec -- $(GPRINSTALL) --uninstall -q -f --prefix=$(DESTDIR)${prefix} $(MAKE_ARGS) $(1).gpr

endef

define ada_program
  all:: lib-setup
	$(GNATMAKE) $(GPRFLAGS) -p -P$(2)$(1).gpr $(STATIC_MAKE_ARGS)

  lib-setup:: obj/$(1)/static

  obj/$(1)/static:
	$(MKDIR) -p obj/$(1)/static

endef

define awa_install_dir

install:: | $(DESTDIR)$(dynamodir)/$(1)/$(2)
	(cd $(3) && tar --exclude='*~' -cf - $(2)) \
       | (cd $(DESTDIR)$(dynamodir)/$(1)/ && tar xf -)

$(DESTDIR)$(dynamodir)/$(1)/$(2):
	$(MKDIR) -p $(DESTDIR)$(dynamodir)/$(1)/$(2)

endef

define awa_install_file

install:: | $(DESTDIR)$(dynamodir)/$(1)
	$(CP) $(3)/$(2) $(DESTDIR)$(dynamodir)/$(1)/$(2)

endef

define awa_install_plugin

uninstall::
	rm -rf $(DESTDIR)$(dynamodir)/$(strip $(1))

$(foreach dir,$($(1)_install_dirs),$(eval $(call awa_install_dir,$(strip $(1)),$(dir),$($(1)_dir))))

$(foreach dir,$($(1)_install_files),$(eval $(call awa_install_file,$(strip $(1)),$(dir),$($(1)_dir))))

$(DESTDIR)$(dynamodir)/$(1):
	$(MKDIR) -p $(DESTDIR)$(dynamodir)/$(1)

install:: | $(DESTDIR)$(dynamodir)/$(1)
	$(CP) $($(1)_dir)/dynamo.xml $(DESTDIR)$(dynamodir)/$(strip $(1))/dynamo.xml

endef

define awa_plugin

$(eval $(call awa_install_plugin,$(strip $(1))))

ifdef $(1)_dynamo

generate::
	cd $($(1)_dir) && $(DYNAMO) generate $($(1)_dynamo)
endif

clean::
	$(RM) -r $($(1)_dir)/dynamo.log $($(1)_dir)/obj $($(1)_dir)/lib

endef

define alire_publish
  publish::
	-rm -f $(aliredir)/$(2)/$(3)
	cd $(1) && alr -f --no-tty publish --skip-submit
	mkdir -p $(aliredir)/index/$(2)
	cp $(1)/alire/releases/$(3) $(aliredir)/index/$(2)/$(3)

endef

define pandoc_build

ifneq (, ${PANDOC})

doc::  docs/$(1).pdf docs/$(1).html
ifneq (${DYNAMO},)
	$(DYNAMO) build-doc -markdown wiki
endif

docs/$(1).pdf:  force
ifneq (${DYNAMO},)
	$(DYNAMO) build-doc -pandoc docs
	$(3)
endif
	cd docs && $(PANDOC) $(DOC_OPTIONS) -o $(1).pdf --template=./eisvogel.tex $(2)

docs/$(1).html: docs/$(1).pdf force
	cd docs && $(PANDOC) $(HTML_OPTIONS) -o $(1).html $(2)

endif

endef

force:

build-test::

uninstall::

install-static::

endif

ifdef DESTDIR

.NOTPARALLEL:

endif

setup::
	echo "BUILD=$(BUILD)" > Makefile.conf
	echo "PREFIX=$(prefix)" >> Makefile.conf
	echo "BUILDS_SHARED=$(BUILDS_SHARED)" >> Makefile.conf
